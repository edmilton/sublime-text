<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>CFML (do not use)</string>

	<key>patterns</key>
	<array>
		<!-- CFSCRIPT -->
		<dict>
			<key>begin</key>
			<string>(?:^\s+)?(&lt;)((?i:cfscript))(?![^&gt;]*/&gt;)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.block.cf.script.cfml</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.cf.script.cfml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&lt;/)((?i:cfscript))(&gt;)(?:\s*\n)?</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(&gt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.block.cf.script.cfml</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.cfscript.embedded.cfml</string>
					<key>end</key>
					<string>(?=&lt;/(?i:cfscript))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.cfscript</string>
						</dict>
					</array>
				</dict>

			</array>
		</dict>


		<!-- CFFUNCTION -->
		<dict>
			<key>begin</key>
			<string>(&lt;/?)((?i:cffunction))\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.cf.function.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.tag.block.cf.function.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#func-name-attribute</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-stuff</string>
				</dict>
			</array>
		</dict>


		<!-- CFSET|CFRETURN -->
		<dict>
			<key>begin</key>
			<string>(&lt;)(?i:(cfset|cfreturn))\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.cf.inline.declaration.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>((?:\s?/)?&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.tag.inline.cf.any.cfml</string>
			<key>contentName</key>
			<string>source.cfscript.embedded.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfcomments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.cfscript</string>
				</dict>
			</array>
		</dict>

		<!-- inline tags  -->
		<dict>
			<key>begin</key>
			<string>(?x)
				(&lt;)
					(?i:
						(cf(queryparam|location|forward|import|param|break|abort|flush
							|setting|test|dump|content|include|catch|continue
							|file|log|object|invoke|throw|property|htmlhead
							|header|argument|exit|trace)
						)
						\b
					)
			</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.cf.inline.other.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>((?:\s?/)?&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.tag.inline.cf.any.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-stuff</string>
				</dict>
			</array>
		</dict>


		<!-- CFQUERY -->
		<dict>
			<key>begin</key>
			<string>(?:^\s+)?(&lt;)((?i:cfquery))\b(?![^&gt;]*/&gt;)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.block.cf.query.cfml</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.cf.query.cfml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&lt;/)((?i:cfquery))(&gt;)(?:\s*\n)?</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=cfquery)\s</string>
					<key>end</key>
					<string>(?=&gt;)</string>
					<key>name</key>
					<string>meta.tag.block.cf.output.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#qry-name-attribute</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tag-stuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&gt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.block.cf.query.cfml</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.sql.embedded.cfml</string>
					<key>end</key>
					<string>(?=&lt;/(?i:cfquery))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-double-quoted</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-single-quoted</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#embedded-tags</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(&lt;/?)((?i:(?:cfqueryparam))\b)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.tag.begin.cfml</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.tag.cf.inline.param.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?:\s?/)?&gt;)</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.tag.end.cfml</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.tag.inline.cf.query-param.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#tag-stuff</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#nest-hash</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.sql</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>


		<dict>
			<key>include</key>
			<string>#embedded-tags</string>
		</dict>

		<!-- ALL OTHER BLOCK TAGS -->
		<dict>
			<key>begin</key>
			<string>(?x)
				(&lt;/?)
				(?i:
					(cf((output)|(savecontent)|([\w\-_.]+)))
				)
				\b
			</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.cf.block.other.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.tag.block.cf.other.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-stuff</string>
				</dict>
			</array>
		</dict>
	</array>

	<key>repository</key>
	<dict>

		<key>embedded-tags</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfcomments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#conditionals</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#flow-control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#exception-handling</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#cfoutput</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#cfmail</string>
				</dict>
			</array>
		</dict>

		<key>flow-control</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?x)
						(&lt;/?)
						(?i:
							(cfloop)|(cfswitch)|(cf(?:default)?case)
						)
						\b
					</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cf.flow-control.loop.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cf.flow-control.switch.cfml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cf.flow-control.case.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.block.cf.flow-control.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-stuff</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>

		<key>exception-handling</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?x)
						(&lt;/?)
						(?i:
							(cftry)|(cfcatch)|(cflock)|(cffinally|cferror|cfrethrow|cfthrow)
						)
						\b
					</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cf.exception.try.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cf.exception.catch.cfml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cf.lock.cfml</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cf.exception.other.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.block.cf.exceptions.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-stuff</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>

		<key>conditionals</key>
		<dict>
			<key>patterns</key>
			<array>
				<!-- CFIF -->
				<dict>
					<key>begin</key>
					<string>(&lt;/?)((?i:cfif))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cf.conditional.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.block.cf.conditional.cfml</string>
					<key>contentName</key>
					<string>source.cfscript.embedded.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.cfscript</string>
						</dict>
					</array>
				</dict>
				<!-- cfelseif/cfelse -->
				<dict>
					<key>begin</key>
					<string>(&lt;/?)(?i:(cfelseif|cfelse))</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.cf.conditional.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.inline.cf.conditional.cfml</string>
					<key>contentName</key>
					<string>source.cfscript.embedded.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.cfscript</string>
						</dict>
					</array>
				</dict>
				<!-- /CFIF -->
			</array>
		</dict>
		<!-- /conditionals -->

		<!-- cfoutput -->
		<key>cfoutput</key>
		<dict>
			<key>begin</key>
			<string>(?:^\s+)?(&lt;)((?i:cfoutput))\b(?![^&gt;]*/&gt;)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.block.cf.output.cfml</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.cf.output.cfml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&lt;/)((?i:cfoutput))(&gt;)(?:\s*\n)?</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=cfoutput)\s</string>
					<key>end</key>
					<string>(?=&gt;)</string>
					<key>name</key>
					<string>meta.tag.block.cf.output.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-stuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&gt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.block.cf.output.cfml</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=&lt;/(?i:cfoutput))</string>
					<!-- Scope allows highlighting illegal unescaped hashes and fine-grained highlighting of embedded hashes, variables and functions -->
					<key>contentName</key>
					<string>meta.scope.between-output-tags.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#nest-hash</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.html.cfm</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<!-- /cfoutput -->

		<!-- cfmail -->
		<key>cfmail</key>
		<dict>
			<key>begin</key>
			<string>(?:^\s+)?(&lt;)((?i:cfmail))\b(?![^&gt;]*/&gt;)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.tag.block.cf.mail.cfml</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.cf.mail.cfml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&lt;/)((?i:cfmail))(&gt;)(?:\s*\n)?</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=cfmail)\s</string>
					<key>end</key>
					<string>(?=&gt;)</string>
					<key>name</key>
					<string>meta.tag.block.cf.mail.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-stuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&gt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.tag.block.cf.mail.cfml</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=&lt;/(?i:cfmail))</string>
					<!-- Added scope to allow highlighting illegal unescaped hashes -->
					<key>contentName</key>
					<string>meta.scope.between-mail-tags.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#nest-hash</string>
						</dict>
						<dict>
							<key>include</key>
							<string>text.html.cfm</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<!-- /cfmail -->

<!-- /ends embedded tags -->
<!-- ************************************************************************** -->

		<!-- for Symbol List
		meta.toc-list.function.name -->
		<key>func-name-attribute</key>
		<dict>
			<key>begin</key>
			<string>\b(name)\b\s*(=)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.key-value.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;='|")</string>
			<key>name</key>
			<string>meta.attribute-with-value.name.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.toc-list.function.cfml</string>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entities</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.toc-list.function.cfml</string>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entities</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>


		<!-- for Symbol List cfquery -->
		<key>qry-name-attribute</key>
		<dict>
			<key>begin</key>
			<string>\b(name)\b\s*(=)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.key-value.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;='|")</string>
			<key>name</key>
			<string>meta.attribute-with-value.name.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.toc-list.query.cfml</string>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entities</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.toc-list.query.name.cfml</string>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entities</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>


		<key>cfcomments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>&lt;!---.*?---&gt;</string>
					<key>name</key>
					<string>comment.line.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>&lt;!---</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>---&gt;</string>
					<key>name</key>
					<string>comment.block.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cfcomments</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>


		<!-- this tag-stuff is just for coloring tag attributes -->
		<key>tag-stuff</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfcomments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-generic-attribute</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-single-quoted</string>
				</dict>
			</array>
		</dict>

		<key>tag-generic-attribute</key>
		<dict>
			<key>match</key>
			<string>\b([a-zA-Z\-:]+)</string>
			<key>name</key>
			<string>entity.other.attribute-name.cfml</string>
		</dict>
		<key>string-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#nest-hash</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#entities</string>
				</dict>
			</array>
		</dict>
		<key>string-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#nest-hash</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#entities</string>
				</dict>
			</array>
		</dict>

		<key>entities</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(&amp;)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)</string>
					<key>name</key>
					<string>constant.character.entity.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;</string>
					<key>name</key>
					<string>invalid.illegal.bad-ampersand.cfml</string>
				</dict>
			</array>
		</dict>

		<key>nest-hash</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>##</string>
					<key>name</key>
					<string>string.escaped.hash.cfml</string>
				</dict>
				<!-- Match single illegal unescaped hash -->
				<dict>
					<key>match</key>
					<string>(?x)
							(\#)
							(?!		# zero width negative lookahead assertion
								(
									([\w$]+	# assertion for plain variables or function names including currency symbol "$"
										(
											(\[.*\])				# asserts a match for anything in square brackets
											|
											(\(.*\))				# or anything in parens
											|
											(\.[\w$]+)				# or zero or more "dot" notated variables
											|
											(\s*[\+\-\*\/&amp;]\s*[\w$]+)	# or simple arithmentic operators + concatenation
											|
											(\s*&amp;\s*["|'].+["|']) 	# or concatenation with a quoted string
										)*		# asserts preceeding square brackets, parens, dot notated vars or arithmetic zero or more times
									)
									|
									(\(.*\))	 # asserts a match for anything in parens
								)\#		# asserts closing hash
							)</string>
					<key>name</key>
					<string>invalid.illegal.unescaped.hash.cfml</string>
				</dict>
				<!-- Match the start of interpolated hashes but ignore single hashes that are unmatched -->
				<dict>
					<key>begin</key>
					<string>(?x)
							(\#)
							(?=		# zero width negative lookahead assertion
								(
									([\w$]+	# assertion for plain variables or function names including currency symbol "$"
										(
											(\[.*\])				# asserts a match for anything in square brackets
											|
											(\(.*\))				# or anything in parens
											|
											(\.[\w$]+)				# or zero or more "dot" notated variables
											|
											(\s*[\+\-\*\/&amp;]\s*[\w$]+)	# or simple arithmentic operators + concatenation
											|
											(\s*&amp;\s*["|'].+["|']) 	# or concatenation with a quoted string
										)*		# asserts preceeding square brackets, parens, dot notated vars or arithmetic zero or more times
									)
									|
									(\(.*\))	 # asserts a match for anything in parens
								)\#		# asserts closing hash
							)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.hash.begin.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(#)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.hash.end.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.cfscript.embedded.cfml</string>
					<key>name</key>
					<string>meta.name.interpolated.hash.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.cfscript</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>

	<key>scopeName</key>
	<string>text.cfml.basic</string>

	<key>uuid</key>
	<string>C48DE6D0-4226-11E1-B86C-0800200C9A66</string>
</dict>
</plist>
